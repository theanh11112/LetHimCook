const Recipe = require('../models/Recipe');

// L·∫•y t·∫•t c·∫£ c√¥ng th·ª©c
exports.getRecipes = async (req, res) => {
    try {
        const recipes = await Recipe.find();
        res.json(recipes);
    } catch (error) {
        res.status(500).json({ message: "L·ªói server" });
    }
};

// Th√™m c√¥ng th·ª©c m·ªõi
exports.createRecipe = async (req, res) => {
    try {
        const newRecipe = new Recipe(req.body);
        await newRecipe.save();
        res.status(201).json(newRecipe);
    } catch (error) {
        res.status(500).json({ message: "Kh√¥ng th·ªÉ t·∫°o m√≥n ƒÉn" });
    }
};

// X√≥a c√¥ng th·ª©c
exports.deleteRecipe = async (req, res) => {
    try {
        await Recipe.findByIdAndDelete(req.params.id);
        res.json({ message: "ƒê√£ x√≥a c√¥ng th·ª©c!" });
    } catch (error) {
        res.status(500).json({ message: "L·ªói khi x√≥a c√¥ng th·ª©c" });
    }
};

// üìå L·∫•y chi ti·∫øt c√¥ng th·ª©c theo ID
exports.getRecipeById = async (req, res) => {
    try {
        const recipe = await Recipe.findById(req.params.id);
        if (!recipe) {
            return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y c√¥ng th·ª©c" });
        }
        res.json(recipe);
    } catch (error) {
        res.status(500).json({ message: "L·ªói server" });
    }
};

// üìå C·∫≠p nh·∫≠t c√¥ng th·ª©c theo ID
exports.updateRecipe = async (req, res) => {
    try {
        const updatedRecipe = await Recipe.findByIdAndUpdate(req.params.id, req.body, { new: true });
        if (!updatedRecipe) {
            return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y c√¥ng th·ª©c" });
        }
        res.json(updatedRecipe);
    } catch (error) {
        res.status(500).json({ message: "L·ªói khi c·∫≠p nh·∫≠t c√¥ng th·ª©c" });
    }
};

// üìå T√¨m ki·∫øm c√¥ng th·ª©c theo t√™n m√≥n ƒÉn
exports.searchRecipes = async (req, res) => {
    try {
        const keyword = req.query.q;
        const recipes = await Recipe.find({ name: { $regex: keyword, $options: 'i' } });
        res.json(recipes);
    } catch (error) {
        res.status(500).json({ message: "L·ªói khi t√¨m ki·∫øm c√¥ng th·ª©c" });
    }
};

// üìå L·ªçc c√¥ng th·ª©c theo nguy√™n li·ªáu
exports.filterRecipesByIngredient = async (req, res) => {
    try {
        const ingredient = req.query.ingredient;
        const recipes = await Recipe.find({ ingredients: { $in: [ingredient] } });
        res.json(recipes);
    } catch (error) {
        res.status(500).json({ message: "L·ªói khi l·ªçc c√¥ng th·ª©c" });
    }
};
